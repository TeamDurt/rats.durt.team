import{a9 as nr,x as fr,al as Q,C as H,h as m,ac as ir,y as ur,o as F,X as tr,z as lr,A as sr,B as G,D as M,J as N,af as vr,F as W,G as Z,I as or,am as w,aj as j,q as cr,a5 as J,an as O,ao as U,ap as q,R as dr,aq as $,ar as _r,as as hr,ai as pr,at as Er,au as Ar,av as gr,ab as xr,a8 as Ir}from"./B026HgcA.js";function Rr(n,r){return r}function Tr(n,r,a,e){for(var f=[],v=r.length,t=0;t<v;t++)hr(r[t].e,f,!0);var c=v>0&&f.length===0&&a!==null;if(c){var A=a.parentNode;pr(A),A.append(a),e.clear(),T(n,r[0].prev,r[v-1].next)}Er(f,()=>{for(var h=0;h<v;h++){var d=r[h];c||(e.delete(d.k),T(n,d.prev,d.next)),Ar(d.e,!c)}})}function Sr(n,r,a,e,f,v=null){var t=n,c={flags:r,items:new Map,first:null},A=(r&Q)!==0;if(A){var h=n;t=m?H(ir(h)):h.appendChild(nr())}m&&ur();var d=null,C=!1,l=tr(()=>{var o=a();return Ir(o)?o:o==null?[]:j(o)});fr(()=>{var o=F(l),i=o.length;if(C&&i===0)return;C=i===0;let x=!1;if(m){var p=lr(t)===sr;p!==(i===0)&&(t=G(),H(t),M(!1),x=!0)}if(m){for(var E=null,g,_=0;_<i;_++){if(N.nodeType===8&&N.data===vr){t=N,x=!0,M(!1);break}var u=o[_],s=e(u,_);g=y(N,c,E,null,u,s,_,f,r,a),c.items.set(s,g),E=g}i>0&&H(G())}m||mr(o,c,t,f,r,e,a),v!==null&&(i===0?d?W(d):d=Z(()=>v(t)):d!==null&&or(d,()=>{d=null})),x&&M(!0),F(l)}),m&&(t=N)}function mr(n,r,a,e,f,v,t){var B,V,X,Y;var c=(f&_r)!==0,A=(f&(O|q))!==0,h=n.length,d=r.items,C=r.first,l=C,o,i=null,x,p=[],E=[],g,_,u,s;if(c)for(s=0;s<h;s+=1)g=n[s],_=v(g,s),u=d.get(_),u!==void 0&&((B=u.a)==null||B.measure(),(x??(x=new Set)).add(u));for(s=0;s<h;s+=1){if(g=n[s],_=v(g,s),u=d.get(_),u===void 0){var er=l?l.e.nodes_start:a;i=y(er,r,i,i===null?r.first:i.next,g,_,s,e,f,t),d.set(_,i),p=[],E=[],l=i.next;continue}if(A&&Cr(u,g,s,f),u.e.f&w&&(W(u.e),c&&((V=u.a)==null||V.unfix(),(x??(x=new Set)).delete(u))),u!==l){if(o!==void 0&&o.has(u)){if(p.length<E.length){var R=E[0],I;i=R.prev;var L=p[0],S=p[p.length-1];for(I=0;I<p.length;I+=1)k(p[I],R,a);for(I=0;I<E.length;I+=1)o.delete(E[I]);T(r,L.prev,S.next),T(r,i,L),T(r,S,R),l=R,i=S,s-=1,p=[],E=[]}else o.delete(u),k(u,l,a),T(r,u.prev,u.next),T(r,u,i===null?r.first:i.next),T(r,i,u),i=u;continue}for(p=[],E=[];l!==null&&l.k!==_;)l.e.f&w||(o??(o=new Set)).add(l),E.push(l),l=l.next;if(l===null)continue;u=l}p.push(u),i=u,l=u.next}if(l!==null||o!==void 0){for(var b=o===void 0?[]:j(o);l!==null;)l.e.f&w||b.push(l),l=l.next;var D=b.length;if(D>0){var ar=f&Q&&h===0?a:null;if(c){for(s=0;s<D;s+=1)(X=b[s].a)==null||X.measure();for(s=0;s<D;s+=1)(Y=b[s].a)==null||Y.fix()}Tr(r,b,ar,d)}}c&&cr(()=>{var z;if(x!==void 0)for(u of x)(z=u.a)==null||z.apply()}),J.first=r.first&&r.first.e,J.last=i&&i.e}function Cr(n,r,a,e){e&O&&U(n.v,r),e&q?U(n.i,a):n.i=a}function y(n,r,a,e,f,v,t,c,A,h){var d=(A&O)!==0,C=(A&gr)===0,l=d?C?dr(f):$(f):f,o=A&q?$(t):t,i={i:o,v:l,k:v,a:null,e:null,prev:a,next:e};try{return i.e=Z(()=>c(n,l,o,h),m),i.e.prev=a&&a.e,i.e.next=e&&e.e,a===null?r.first=i:(a.next=i,a.e.next=i.e),e!==null&&(e.prev=i,e.e.prev=i.e),i}finally{}}function k(n,r,a){for(var e=n.next?n.next.e.nodes_start:a,f=r?r.e.nodes_start:a,v=n.e.nodes_start;v!==e;){var t=xr(v);f.before(v),v=t}}function T(n,r,a){r===null?n.first=a:(r.next=a,r.e.next=a&&a.e),a!==null&&(a.prev=r,a.e.prev=r&&r.e)}function rr(n){var r,a,e="";if(typeof n=="string"||typeof n=="number")e+=n;else if(typeof n=="object")if(Array.isArray(n)){var f=n.length;for(r=0;r<f;r++)n[r]&&(a=rr(n[r]))&&(e&&(e+=" "),e+=a)}else for(a in n)n[a]&&(e&&(e+=" "),e+=a);return e}function br(){for(var n,r,a=0,e="",f=arguments.length;a<f;a++)(n=arguments[a])&&(r=rr(n))&&(e&&(e+=" "),e+=r);return e}function Dr(n){return typeof n=="object"?br(n):n??""}const K=[...` 	
\r\fÂ \v\uFEFF`];function Hr(n,r,a){var e=n==null?"":""+n;if(r&&(e=e?e+" "+r:r),a){for(var f in a)if(a[f])e=e?e+" "+f:f;else if(e.length)for(var v=f.length,t=0;(t=e.indexOf(f,t))>=0;){var c=t+v;(t===0||K.includes(e[t-1]))&&(c===e.length||K.includes(e[c]))?e=(t===0?"":e.substring(0,t))+e.substring(c+1):t=c}}return e===""?null:e}function P(n,r=!1){var a=r?" !important;":";",e="";for(var f in n){var v=n[f];v!=null&&v!==""&&(e+=" "+f+": "+v+a)}return e}function Mr(n,r){if(r){var a="",e,f;return Array.isArray(r)?(e=r[0],f=r[1]):e=r,e&&(a+=P(e)),f&&(a+=P(f,!0)),a=a.trim(),a===""?null:a}return String(n)}export{Mr as a,Dr as c,Sr as e,Rr as i,Hr as t};
